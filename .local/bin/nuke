#!/usr/bin/env sh
GUI="${GUI:-1}"
BIN="${BIN:-0}"

set -euf -o noclobber -o noglob -o nounset
IFS="$(printf '%b_' '\n')"; IFS="${IFS%_}" # protect trailing \n

PATH=$PATH:"${XDG_CONFIG_HOME:-$HOME/.config}/nnn/plugins"

FPATH="$1"
FNAME=$(basename "$1")
EDITOR="nano"
PAGER="${PAGER:-less -R}"
ext="${FNAME##*.}"
if [ -n "$ext" ]; then
    ext="$(printf "%s" "${ext}" | tr '[:upper:]' '[:lower:]')"
fi

handle_pdf() {
    if type zathura >/dev/null 2>&1; then
        zathura "${FPATH}" >/dev/null 2>&1
        return
    fi
    exit 0
}

handle_av() {
    if type mpv >/dev/null 2>&1; then
        mpv --player-operation-mode=pseudo-gui "${FPATH}" >/dev/null 2>&1 &
    fi
    exit 0
}

handle_extension() {
    case "$ext" in
        ## PDF
        pdf)
            handle_pdf
            return;;

        ## Audio
        aac|flac|m4a|mid|midi|mpa|mp2|mp3|ogg|wav|wma)
            handle_av
            return;;

        ## Video
        avi|mkv|mp4|ts)
            handle_av
            return;;
    esac
}

abspath() {
    case "$1" in
        /*) abs_target="$1";;
        *)  abs_target="$PWD/$1";;
    esac
}

handle_multimedia() {
    mimetype="${1}"
    case "${mimetype}" in
        ## Image
        image/*)
            if type mvi >/dev/null 2>&1; then
                mvi  "${FPATH}" >/dev/null 2>&1 &
                return
            fi
            exit 1;;

        ## PDF
        application/pdf)
            handle_pdf
            return;;

        ## Audio
        audio/*)
            handle_av
            return;;

        ## Video
        video/*)
            handle_av
            return;;
    esac
}

handle_mime() {
    mimetype="${1}"
    case "${mimetype}" in
        ## Text
        text/* | */xml)
            "$EDITOR" "${FPATH}"
            return;;
    esac
}

handle_fallback() {
    if [ "$GUI" -ne 0 ]; then
        if type xdg-open >/dev/null 2>&1; then
            nohup xdg-open "${FPATH}" >/dev/null 2>&1 &
            return
        fi
    fi

    echo '----- File details -----' && file --dereference --brief -- "${FPATH}"
    exit 1
}

MIMETYPE="$( file -bL --mime-type -- "${FPATH}" )"
handle_multimedia "${MIMETYPE}"
handle_extension
handle_fallback
